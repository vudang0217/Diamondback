(data NumPair (Num Num))
(data PointNum (Num NumPair))
(def test () : Bool
    (PointNum 1 (null NumPair))
    (let ((x (NumPair 4 5)) (y (PointNum 6 (NumPair 7 8))))
        (NumPair 9 10)
        (PointNum 11 (NumPair 12 13))
        (let ((z (NumPair 14 15)) (w (PointNum 16 z)))
            (NumPair 17 18)
            (PointNum 19 (NumPair 20 21))
            (NumPair 22 23)
            (PointNum 24 (NumPair 25 26))
            (NumPair 27 28)
            (PointNum 29 (NumPair 30 31))
            (NumPair 32 33)
            (PointNum 34 (NumPair 35 36))
            (let ((u (PointNum 37 (NumPair 38 39))))
                true
            )
        )
    )
)
(test)
